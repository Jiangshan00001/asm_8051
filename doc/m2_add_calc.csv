Mnemonic,Operands,Description,Byte,Oscillator Period,Class,BYTE0,BYTE1,BYTE2
ADD,"A,Rn",Add register to Accumulator,1,12,ARITHMETIC OPERATIONS,0x28+$2,,
ADD,"A,direct",Add direct byte to Accumulator,2,12,ARITHMETIC OPERATIONS,0x25,$2 ,
ADD,"A,@Ri",Add indirect RAM to Accumulator,1,12,ARITHMETIC OPERATIONS,0x26+$2,,
ADD,"A,#data",Add immediate data to Accumulator,2,12,ARITHMETIC OPERATIONS,0x24,$2 ,
ADDC,"A,Rn",Add register to Accumulator with Carry,1,12,ARITHMETIC OPERATIONS,0x38+$2,,
ADDC,"A,direct",Add direct byte to Accumulator with Carry,2,12,ARITHMETIC OPERATIONS,0x35,$2 ,
ADDC,"A,@Ri",Add indirect RAM to Accumulator with Carry,1,12,ARITHMETIC OPERATIONS,0x36+$2,,
ADDC,"A,#data",Add immediate data to Acc with Carry,2,12,ARITHMETIC OPERATIONS,0x34,$2 ,
SUBB,"A,Rn",Subtract Register from Acc with borrow,1,12,ARITHMETIC OPERATIONS,0x98+$2,,
SUBB,"A,direct",Subtract direct byte from Acc with borrow,2,12,ARITHMETIC OPERATIONS,0x95,$2 ,
SUBB,"A,@Ri",Subtract indirect RAM from ACC with borrow,1,12,ARITHMETIC OPERATIONS,0x96+$2,,
SUBB,"A,#data",Subtract immediate data from Acc with borrow,2,12,ARITHMETIC OPERATIONS,0x94,$2 ,
INC,A,Increment Accumulator,1,12,ARITHMETIC OPERATIONS,0x04,,
INC,Rn,Increment register,1,12,ARITHMETIC OPERATIONS,0x08+$1,,
INC,direct,Increment direct byte,2,12,ARITHMETIC OPERATIONS,0x05,$1 ,
INC,@Ri,Increment direct RAM,1,12,ARITHMETIC OPERATIONS,0x06+$1,,
DEC,A,Decrement Accumulator,1,12,ARITHMETIC OPERATIONS,0x14,,
DEC,Rn,Decrement Register,1,12,ARITHMETIC OPERATIONS,0x18+$1,,
DEC,direct,Decrement direct byte,2,12,ARITHMETIC OPERATIONS,0x15,$1 ,
DEC,@Ri,Decrement indirect RAM,1,12,ARITHMETIC OPERATIONS,0x16+$1,,
INC,DPTR,Increment Data Pointer,1,24,ARITHMETIC OPERATIONS,0xA3,,
MUL,AB,Multiply A & B,1,48,ARITHMETIC OPERATIONS,0xA4,,
DIV,AB,Divide A by B,1,48,ARITHMETIC OPERATIONS,0x84,,
DA,A,Decimal Adjust Accumulator,1,12,ARITHMETIC OPERATIONS,0xD4,,
CLR,C,Clear Carry,1,12,BOOLEAN VARIABLE MANIPULATION,0xC3,,
CLR,bit,Clear direct bit,2,12,BOOLEAN VARIABLE MANIPULATION,0xC2,$1 ,
SETB,C,Set Carry,1,12,BOOLEAN VARIABLE MANIPULATION,0xD3,,
SETB,bit,Set direct bit,2,12,BOOLEAN VARIABLE MANIPULATION,0xD2,$1 ,
CPL,C,Complement Carry,1,12,BOOLEAN VARIABLE MANIPULATION,0xB3,,
CPL,bit,Complement direct bit,2,12,BOOLEAN VARIABLE MANIPULATION,0xB2,$1 ,
ANL,"C,bit",AND direct bit to CARRY,2,24,BOOLEAN VARIABLE MANIPULATION,0x82,$2 ,
ANL,"C,/bit",AND complement of direct bit to Carry,2,24,BOOLEAN VARIABLE MANIPULATION,0xB0,$2 ,
ORL,"C,bit",OR direct bit to Carry,2,24,BOOLEAN VARIABLE MANIPULATION,0x72,$2 ,
ORL,"C,/bit",OR complement of direct bit to Carry,2,24,BOOLEAN VARIABLE MANIPULATION,0xA0,$2 ,
MOV,"C,bit",Move direct bit to Carry,2,12,BOOLEAN VARIABLE MANIPULATION,0xA2,$2 ,
MOV,"bit,C",Move Carry to direct bit,2,24,BOOLEAN VARIABLE MANIPULATION,0x92,$1 ,
JC,rel,Jump if Carry is set,2,24,BOOLEAN VARIABLE MANIPULATION,0x40,$1 ,
JNC,rel,Jump if Carry not set,2,24,BOOLEAN VARIABLE MANIPULATION,0x50,$1 ,
JB,"bit,rel",Jump if direct Bit is set,3,24,BOOLEAN VARIABLE MANIPULATION,0x20,$1 ,$2 
JNB,"bit,rel",Jump if direct Bit is Not set,3,24,BOOLEAN VARIABLE MANIPULATION,0x30,$1 ,$2 
JBC,"bit,rel",Jump if direct Bit is set & clear bit,3,24,BOOLEAN VARIABLE MANIPULATION,0x10,$1 ,$2 
MOV,"A,Rn",Move register to Accumulator,1,12,DATA TRANSFER,0xe8+$2,,
MOV,"A,direct",Move direct byte to Accumulator,2,12,DATA TRANSFER,0xe5,$2 ,
MOV,"A,@Ri",Move indirect RAM to Accumulator,1,12,DATA TRANSFER,0xe6+$2,,
MOV,"A,#data",Move immediate data to Accumulator,2,12,DATA TRANSFER,0x74,$2 ,
MOV,"Rn,A",Move Accumulator to register,1,12,DATA TRANSFER,0xF8+$1,,
MOV,"Rn,direct",Move direct byte to register,2,24,DATA TRANSFER,0xA8+$1,$2 ,
MOV,"Rn,#data",Move immediate data to register,2,12,DATA TRANSFER,0x78+$1,$2 ,
MOV,"direct,A",Move Accumulator to direct byte,2,12,DATA TRANSFER,0xF5,$1 ,
MOV,"direct,Rn",Move register to direct byte,2,24,DATA TRANSFER,0x88+$2,$1 ,
MOV,"direct,direct",Move direct byte to direct,3,24,DATA TRANSFER,0x85,$2 ,$1 
MOV,"direct,@Ri",Move indirect RAM to direct byte,2,24,DATA TRANSFER,0x86+$2,$1 ,
MOV,"direct,#data",Move immediate data to direct byte,3,24,DATA TRANSFER,0x75,$1 ,$2 
MOV,"@Ri,A",Move Accumulator to indirect RAM,1,12,DATA TRANSFER,0xF6+$1,,
MOV,"@Ri,direct",Move direct byte to indirect RAM,2,24,DATA TRANSFER,0xA6+$1,$2 ,
MOV,"@Ri,#data",Move immediate data to indirect RAM,2,12,DATA TRANSFER,0x76+$1,$2 ,
MOV,"DPTR,#data16",Load Data Pointer with a 16-bit constant,3,24,DATA TRANSFER,0x90,($2 &0xff00)>>8,($2 &0xff)
MOVC,"A,@A+DPTR",Move Code byte relative to DPTR to Acc,1,24,DATA TRANSFER,0x93,,
MOVC,"A,@A+PC",Move Code byte relative to PC to Acc,1,24,DATA TRANSFER,0x83,,
MOVX,"A,@Ri",Move External RAM (8- bit addr) to Acc,1,24,DATA TRANSFER,0xe2+$2,,
MOVX,"A,@DPTR",Move Exernal RAM (16- bit addr) to Acc,1,24,DATA TRANSFER,0xe0,,
MOVX,"@Ri,A",Move Acc to External RAM (8-bit addr),1,24,DATA TRANSFER,0xf2+$1,,
MOVX,"@DPTR,A",Move Acc to External RAM (16-bit addr),1,24,DATA TRANSFER,0xf0,,
PUSH,direct,Push direct byte onto stack,2,24,DATA TRANSFER,0xC0,$1 ,
POP,direct,Pop direct byte from stack,2,24,DATA TRANSFER,0xD0,$1 ,
XCH,"A,Rn",Exchange register with Accumulator,1,12,DATA TRANSFER,0xC8+$2,,
XCH,"A,direct",Exchange direct byte with Accumulator,2,12,DATA TRANSFER,0xC5,$2 ,
XCH,"A,@Ri",Exchange indirect RAM with Accumulator,1,12,DATA TRANSFER,0xC6+$2,,
XCHD,"A,@Ri",Exchange low-order Digit indirect RAM with Acc,1,12,DATA TRANSFER,0xD6+$2,,
ANL,"A,Rn",AND Register to Accumulator,1,12,LOGICAL OPERATIONS,0x58+$2,,
ANL,"A,direct",AND direct byte to Accumulator,2,12,LOGICAL OPERATIONS,0x55,$2 ,
ANL,"A,@Ri",AND indirect RAM to Accumulator,1,12,LOGICAL OPERATIONS,0x56+$2,,
ANL,"A,#data",AND immediate data to Accumulator,2,12,LOGICAL OPERATIONS,0x54,$2 ,
ANL,"direct,A",AND Accumulator to direct byte,2,12,LOGICAL OPERATIONS,0x52,$1 ,
ANL,"direct,#data",AND immediate data to direct byte,3,24,LOGICAL OPERATIONS,0x53,$1 ,$2 
ORL,"A,Rn",OR register to Accumulator,1,12,LOGICAL OPERATIONS,0x48+$2,,
ORL,"A,direct",OR direct byte to Accumulator,2,12,LOGICAL OPERATIONS,0x45,$2 ,
ORL,"A,@Ri",OR indirect RAM to Accumulator,1,12,LOGICAL OPERATIONS,0x46+$2,,
ORL,"A,#data",OR immediate data to Accumulator,2,12,LOGICAL OPERATIONS,0x44,$2 ,
ORL,"direct,A",OR Accumulator to direct byte,2,12,LOGICAL OPERATIONS,0x42,$1 ,
ORL,"direct,#data",OR immediate data to direct byte,3,24,LOGICAL OPERATIONS,0x43,$1 ,$2 
XRL,"A,Rn",Exclusive-OR register to Accumulator,1,12,LOGICAL OPERATIONS,0x68+$2,,
XRL,"A,direct",Exclusive-OR direct byte to Accumulator,2,12,LOGICAL OPERATIONS,0x65,$2 ,
XRL,"A,@Ri",Exclusive-OR indirect RAM to Accumulator,1,12,LOGICAL OPERATIONS,0x66+$2,,
XRL,"A,#data",Exclusive-OR immediate data to Accumulator,2,12,LOGICAL OPERATIONS,0x64,$2 ,
XRL,"direct,A",Exclusive-OR Accumulator to direct byte,2,12,LOGICAL OPERATIONS,0x62,$1 ,
XRL,"direct,#data",Exclusive-OR immediate data to direct byte,3,24,LOGICAL OPERATIONS,0x63,$1 ,$2 
CLR,A,Clear Accumulator,1,12,LOGICAL OPERATIONS,0xE4,,
CPL,A,Complement Accumulator,1,12,LOGICAL OPERATIONS,0xF4,,
RL,A,Rotate Accumulator Left,1,12,LOGICAL OPERATIONS,0x23,,
RLC,A,Rotate Accumulator Left through the Carry,1,12,LOGICAL OPERATIONS,0x33,,
RR,A,Rotate Accumulator Right,1,12,LOGICAL OPERATIONS,0x03,,
RRC,A,Rotate Accumulator Right through the Carry,1,12,LOGICAL OPERATIONS,0x13,,
SWAP,A,Swap nibbles within the Accumulator,1,12,LOGICAL OPERATIONS,0xC4,,
ACALL,addr11,Absolute Subroutine Call,2,24,PROGRAM BRANCHING,(($1&0x700)>>3)+0x11,($1&0xff),
LCALL,addr16,Long Subroutine Call,3,24,PROGRAM BRANCHING,0x12,($1 &0xff00)>>8,($1 &0xff)
RET,,Return from Subroutine,1,24,PROGRAM BRANCHING,0x22,,
RETI,,Return from interrupt,1,24,PROGRAM BRANCHING,0x32,,
AJMP,addr11,Absolute Jump,2,24,PROGRAM BRANCHING,(($1&0x700)>>3)+1,$1&0xff,
LJMP,addr16,Long Jump,3,24,PROGRAM BRANCHING,0x02,($1 &0xff00)>>8,($1 &0xff)
SJMP,rel,Short Jump (relative addr),2,24,PROGRAM BRANCHING,0x80,$1 ,
JMP,@A+DPTR,Jump indirect relative to the DPTR,1,24,PROGRAM BRANCHING,0x73,,
JZ,rel,Jump if Accumulator is Zero,2,24,PROGRAM BRANCHING,0x60,$1 ,
JNZ,rel,Jump if Accumulator is Not Zero,2,24,PROGRAM BRANCHING,0x70,$1 ,
CJNE,"A,direct,rel",Compare direct byte to Acc and Jump if Not Equal,3,24,PROGRAM BRANCHING,0xB5,$2 ,$3 
CJNE,"A,#data,rel",Compare immediate to Acc and Jump if Not Equal,3,24,PROGRAM BRANCHING,0xB4,$2 ,$3 
CJNE,"Rn,#data,rel",Compare immediate to register and Jump if Not Equal,3,24,PROGRAM BRANCHING,0xB8+$1,$2 ,$3 
CJNE,"@Ri,#data,rel",Compare immediate to indirect and Jump if Not Equal,3,24,PROGRAM BRANCHING,0xB6+$1,$2 ,$3 
DJNZ,"Rn,rel",Decrement register and Jump if Not Zero,2,24,PROGRAM BRANCHING,0xD8+$1,$2 ,
DJNZ,"direct,rel",Decrement direct byte and Jump if Not Zero,3,24,PROGRAM BRANCHING,0xD5,$1 ,$2 
NOP,,No Operation,1,12,PROGRAM BRANCHING,0x00,,
JMP,rel,Short Jump (relative addr),2,24,PROGRAM BRANCHING,0x80,$1 ,
CALL,addr11,Absolute Subroutine Call,2,24,PROGRAM BRANCHING,(($1&0x700)>>3)+0x11,($1&0xff),
SIMTRAP,"direct,direct",A5 test A if not zero,3,12,TEST,0xA5,$1 ,$2 
